Here's an example of a basic code structure for creating a new tax rental site using HTML, CSS, and JavaScript. Please note that this is a simplified example and may require additional functionality and security measures for a real-world application.

**HTML (index.html)**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tax Rental Site</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="#">Home</a></li>
                <li><a href="#">About</a></li>
                <li><a href="#">Contact</a></li>
            </ul>
        </nav>
    </header>
    <main>
        <section>
            <h1>Tax Rental Site</h1>
            <form id="rental-form">
                <label for="property-type">Property Type:</label>
                <select id="property-type" name="property-type">
                    <option value="residential">Residential</option>
                    <option value="commercial">Commercial</option>
                </select>
                <br>
                <label for="rental-income">Rental Income:</label>
                <input type="number" id="rental-income" name="rental-income" required>
                <br>
                <label for="tax-deductions">Tax Deductions:</label>
                <input type="number" id="tax-deductions" name="tax-deductions" required>
                <br>
                <button id="calculate-tax">Calculate Tax</button>
            </form>
            <div id="tax-result"></div>
        </section>
    </main>
    <script src="script.js"></script>
</body>
</html>
```

**CSS (styles.css)**
```css
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header {
    background-color: #333;
    color: #fff;
    padding: 1em;
    text-align: center;
}

nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: space-between;
}

nav li {
    margin-right: 20px;
}

nav a {
    color: #fff;
    text-decoration: none;
}

main {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2em;
}

section {
    background-color: #f7f7f7;
    padding: 1em;
    border: 1px solid #ddd;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1 {
    margin-top: 0;
}

label {
    display: block;
    margin-bottom: 10px;
}

input[type="number"] {
    width: 100%;
    height: 40px;
    margin-bottom: 20px;
    padding: 10px;
    border: 1px solid #ccc;
}

button {
    background-color: #333;
    color: #fff;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
}

button:hover {
    background-color: #444;
}

#tax-result {
    font-size: 24px;
    font-weight: bold;
    margin-top: 20px;
}
```

**JavaScript (script.js)**
```javascript
const rentalForm = document.getElementById('rental-form');
const propertyTypeSelect = document.getElementById('property-type');
const rentalIncomeInput = document.getElementById('rental-income');
const taxDeductionsInput = document.getElementById('tax-deductions');
const calculateTaxButton = document.getElementById('calculate-tax');
const taxResultDiv = document.getElementById('tax-result');

calculateTaxButton.addEventListener('click', (e) => {
    e.preventDefault();
    const propertyType = propertyTypeSelect.value;
    const rentalIncome = parseFloat(rentalIncomeInput.value);
    const taxDeductions = parseFloat(taxDeductionsInput.value);
    const taxRate = getTaxRate(propertyType);
    const taxableIncome = rentalIncome - taxDeductions;
    const taxAmount = taxableIncome * taxRate;
    taxResultDiv.textContent = `Tax Amount: $${taxAmount.toFixed(2)}`;
});

function getTaxRate(propertyType) {
    switch (propertyType) {
        case 'residential':
            return 0.20; // 20% tax rate for residential properties
        case 'commercial':
            return 0.30; // 30% tax rate for commercial properties
        default:
            return 0;
    }
}
```

This code creates a basic tax rental site with a form that allows users to input their rental income and tax deductions. The site calculates the tax amount based on the property type and tax rate.

Please note that this is a simplified example and does not include any error handling, validation, or security measures. You should consider adding these features to make the site more robust and secure.

Also, this code uses a simple tax calculation formula, you may want to consider using a more complex formula that takes into account other factors such as location, property value, and other tax laws.

You can also use a library like `taxjar` to handle tax calculations, it's a more robust and accurate way to calculate taxes.

You can also use a framework like `React` or `Angular` to build the site, it will make it more scalable and maintainable.

Please let me know if you have any questions or need further assistance.